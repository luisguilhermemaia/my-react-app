{"version":3,"sources":["logo.svg","lock.svg","user.svg","modules/theme.js","modules/layout/nav/Nav.js","modules/user/Login.js","modules/user/components/picture-uploader/PitctureUploader.js","modules/user/Register.js","modules/posts/components/post/Post.js","modules/posts/Posts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","NavContainer","nav","_templateObject2","Logo","img","_templateObject3","FormHeader","_templateObject4","_templateObject5","FormBody","_templateObject6","Form","form","_templateObject7","PostList","ul","_templateObject8","PostItem","li","_templateObject9","Field","FormikField","_templateObject10","ValidationError","props","react_default","a","createElement","ErrorMessageContainer","formik_esm","_templateObject11","Label","label","_templateObject12","Img","_templateObject13","UploadedImg","_templateObject14","Button","button","_templateObject15","Input","input","_templateObject16","displaynone","Title","h1","_templateObject17","color","Title2","h2","_templateObject18","Text","_templateObject19","hasNav","withRouter","_ref","location","includes","pathname","className","Link","to","src","logo","alt","initialValues","email","password","validationSchema","Yup","shape","required","min","max","Login","handleSubmit","_callee","values","setSubmitting","response","users","parsedFormValues","regenerator_default","wrap","_context","prev","next","fetch","sent","json","JSON","stringify","filter","user","_this","history","push","t0","console","warn","stop","this","onSubmit","isSubmitting","lock","id","name","type","placeholder","theme_ValidationError","disabled","Component","PictureUploader","state","file","picture","clear","onChange","e","preventDefault","reader","FileReader","Object","slicedToArray","target","files","onloadend","result","readAsDataURL","value","Fragment","onClick","onKeyPress","onFileChange","bind","fullName","dateOfBirth","avatar","Register","method","body","headers","Content-type","t1","log","call","t2","handleChange","PitctureUploader_PictureUploader","Post","post","Posts","classCallCheck","possibleConstructorReturn","getPrototypeOf","error","isLoaded","posts","_this2","then","res","setState","_this$state","message","postItems","map","post_Post","key","GlobalStyle","createGlobalStyle","App_templateObject","Page","App_templateObject2","App","BrowserRouter","nav_Nav","Switch","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89cbecb4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d3fdce2f.svg\";","module.exports = __webpack_public_path__ + \"static/media/lock.5a3a79d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.cd53da3d.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport { Field as FormikField, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 24px;\n  height: 100vh;\n  margin-top: 0;\n`;\n\nexport const NavContainer = styled.nav`\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 20px 0 rgba(0, 0, 0, 0.24);\n  background-color: white;\n  border-bottom: 1px solid lighten($text, 60%);\n  left: 0;\n  padding: 16px 24px;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 1;\n`;\n\nexport const Logo = styled.img`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  transition: .4s;\n  &:hover {\n    cursor: pointer;\n    box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n    transition: .4s;\n    transform: scale(1.09);\n  }\n`;\n\nexport const FileUploader = styled.div`\n  margin: 0 auto;\n  padding: 24px;\n  height: 100vh;\n  margin-top: 0;\n`;\n\nexport const FormHeader = styled.div`\n  background-color: rgba(0, 0, 0, 0.2);\n  width: 100%;\n  align-items: center;\n  display: flex;\n  padding: 1.25rem;\n  box-sizing: border-box;\n  justify-content: space-between;\n`;\n\nexport const FormBody = styled.div`\n  width: 100%;\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  justify-content: space-between;\n`;\n\nexport const Form = styled.form`\n  padding: 20px;\n  background-color: rgba(0, 0, 0, 0.2);\n  width: 100%;\n  max-width: 350px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 20px 0 rgba(0, 0, 0, 0.24);\n`;\n\nexport const PostList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const PostItem = styled.li`\n  background-color: #fff;\n  border-radius: 6px;\n  box-sizing: border-box;\n  box-shadow: 0 6px 20px -10px #6d7689;\n  padding: 20px;\n  position: relative;\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nexport const Field = styled(FormikField)`\n  width: 100%;\n  height: 35px;\n  border: none;\n  background-color: #fff;\n  padding: 1.25rem;\n  margin-top: 1rem;\n  box-sizing: border-box;\n  border-radius: 3px;\n`;\n\nexport const ValidationError = (props) => {\n  return (\n    <ErrorMessageContainer >\n      <ErrorMessage {...props} />\n    </ErrorMessageContainer>\n  )\n}\n\nconst ErrorMessageContainer = styled.div`\n  font-size: 0.7rem;\n  color: red;\n  margin-top: 0.2rem;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  justify-content: space-between;\n`;\n\nexport const Img = styled.img`\n  width: 10rem;\n  border-radius: 50%;\n  /* box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 20px 0 rgba(0, 0, 0, 0.24); */\n  transition: .4s;\n  &:hover {\n    cursor: pointer;\n    box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n    transition: .4s;\n    transform: scale(1.09);\n  }\n`;\n\nexport const UploadedImg = styled.img`\n  width: 10rem;\n  height: 10rem;\n  object-fit: cover;\n  position: relative;\n  border-radius: 50%;\n  transition: .4s;\n  &:hover {\n    cursor: pointer\n    box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\n    transition: .4s;\n    transform: scale(1.09);\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  text-align: center;\n  padding: 0.75rem;\n  display: block;\n  background-color: #5995ef;\n  color: #fff;\n  border-radius: 3px;\n  border: none;\n  margin-top: 1rem;\n  &:focus {\n    background: rgb(62, 113, 189);\n  }\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 20px 0 rgba(0, 0, 0, 0.24);\n`;\n\nexport const Input = styled.input`\n  display: ${props => props.displaynone ? 'none' : ''};\n`;\n\nexport const Title = styled.h1`\n  color: ${props => props.color || '#FFFFFF'};\n  font-family: 'Raleway', sans-serif;\n  font-weight: 600;\n  font-size: 1.2rem;\n  margin-bottom: 0.25rem;\n`;\n\nexport const Title2 = styled.h2`\n  color: ${props => props.color || '#FFFFFF'};\n  font-family: 'Raleway', sans-serif;\n  font-weight: 300;\n  font-size: 0.7rem;\n`;\n\nexport const Text = styled.p`\n  font-family: 'Raleway', sans-serif;\n  color: ${props => props.color || '#FFFFFF'};\n  font-size: 0.7rem;\n  padding-bottom: 1rem;\n`;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport logo from '../../../logo.svg';\nimport { NavContainer, Logo } from '../../theme';\n\nconst hasNav = ['/posts'];\n\nconst Nav = ({ location }) => {\n  if (!hasNav.includes(location.pathname)) {\n    return null;\n  }\n  return (\n    <NavContainer>\n      <div className=\"navLogo\">\n        <Link to=\"/\">\n          <Logo src={logo} alt=\"lock\" />\n        </Link>\n      </div>\n    </NavContainer>\n  );\n};\n\nexport default withRouter(Nav);","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Formik } from 'formik';\nimport { Form, FormHeader, FormBody, Field, Button, ValidationError, Text, Title, Title2 } from '../theme';\nimport lock from '../../lock.svg';\n\nconst initialValues = {\n  email: 'Sincere@april.biz',\n  password: '123456',\n};\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email()\n    .required('Required'),\n  password: Yup.string()\n    .min(4)\n    .max(8)\n    .required('Required'),\n});\n\nclass Login extends Component {\n  handleSubmit = async (values, { setSubmitting }) => {\n    // Fetch to api, using async/await\n    try {\n      var response = await fetch('https://jsonplaceholder.typicode.com/users');\n      var users = await response.json();\n      var parsedFormValues = JSON.stringify(values);\n\n      // 'Simple' if to validate if the user exists\n      var existingUser = users.filter(user => user.email = parsedFormValues.email);\n\n      if (existingUser) {\n        setSubmitting(false);\n        this.props.history.push('/posts');\n      }\n    } catch (error) {\n      console.warn(error);\n    }\n  }\n\n  render() {\n    return (\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={this.handleSubmit}\n      >\n        {props => {\n          const {\n            isSubmitting,\n            handleSubmit,\n          } = props;\n          return (\n            <Form onSubmit={handleSubmit}>\n              <FormHeader>\n                <div>\n                  <Title>Login in to our site</Title>\n                  <Title2>Enter username or password to log on</Title2>\n                </div>\n                <img src={lock} alt=\"lock\" />\n              </FormHeader>\n              <FormBody>\n                <Field\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"text\"\n                  placeholder=\"Enter your email\"\n                />\n                <ValidationError name=\"email\" />\n\n                <Field\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Enter your password\"\n                />\n                <ValidationError name=\"password\" />\n\n                <Button type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </FormBody>\n              <Text>\n                Don't have account?&emsp;\n                <Link to=\"/register\">\n                  Sign up here.\n                </Link>\n              </Text>\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import React, { Component } from 'react';\nimport { Label, Input, Img, UploadedImg } from '../../../theme';\nimport user from '../../../../user.svg';\n\nexport default class PictureUploader extends Component {\n  state = {\n    file: '',\n    picture: '',\n  };\n\n  onFileChange(e) {\n    const { onChange } = this.props;\n    e.preventDefault();\n\n    const reader = new FileReader();\n    const [file] = e.target.files;\n\n    reader.onloadend = () => {\n      onChange(reader.result);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  clear = () => {\n    const { onChange } = this.props;\n    onChange('');\n  }\n\n  render() {\n    const { value } = this.props;\n    return (\n      <React.Fragment>\n        {\n          value\n            ? (\n              <UploadedImg\n                src={value}\n                alt=\"profile\"\n                onClick={this.clear}\n                onKeyPress={() => { }}\n              />\n            )\n            : (\n              <Label>\n                <Img src={user} alt=\"user\" />\n                <Input\n                  displaynone=\"true\"\n                  id=\"file-chooser\"\n                  type=\"file\"\n                  onChange={this.onFileChange.bind(this)}\n                />\n              </Label>\n            )\n        }\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport PictureUploader from './components/picture-uploader/PitctureUploader';\nimport { Form, ValidationError, FormBody, Field, Button, Text } from '../theme';\n\nconst initialValues = {\n  email: '',\n  password: '',\n  fullName: '',\n  dateOfBirth: '',\n  avatar: ''\n};\n\nconst validationSchema = Yup.object().shape({\n  fullName: Yup.string()\n    .required('Required'),\n  email: Yup.string()\n    .email()\n    .required('Required'),\n  password: Yup.string()\n    .min(4)\n    .max(8)\n    .required('Required'),\n  dateOfBirth: Yup.date()\n    .required('Required'),\n});\n\nclass Register extends Component {\n  handleSubmit = async (values, { setSubmitting }) => {\n    // Fetch to api, using async/await\n    try {\n      var response = await fetch('https://jsonplaceholder.typicode.com/users', {\n        method: 'POST',\n        body: JSON.stringify(values),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      console.log(await response.json());\n\n      setSubmitting(false);\n      this.props.history.push('/posts');\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n\n  render() {\n    return (\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={this.handleSubmit}\n      >\n        {props => {\n          const {\n            values,\n            isSubmitting,\n            handleSubmit,\n            handleChange,\n          } = props;\n          return (\n            <Form onSubmit={handleSubmit}>\n              <PictureUploader\n                value={values.avatar}\n                onChange={handleChange('avatar')}\n              />\n              <FormBody>\n                <Field\n                  id=\"fullName\"\n                  name=\"fullName\"\n                  type=\"text\"\n                  placeholder=\"Enter your full name\"\n                />\n                <ValidationError name=\"fullName\" />\n\n                <Field\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"text\"\n                  placeholder=\"Enter your email\"\n                />\n                <ValidationError name=\"email\" />\n\n                <Field\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Enter your password\"\n                />\n                <ValidationError name=\"password\" />\n\n                <Field\n                  id=\"dateOfBirth\"\n                  name=\"dateOfBirth\"\n                  type=\"date\"\n                  placeholder=\"Enter your birth date\"\n                />\n                <ValidationError name=\"dateOfBirth\" />\n\n                <Button type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </FormBody>\n              <Text>\n                Already a user?&emsp;\n                <Link to=\"/\">\n                  Sign in\n                </Link>\n              </Text>\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  }\n};\n\nexport default withRouter(Register);\n","import React, { Component } from 'react';\nimport { PostItem, Title, Title2 } from '../../../theme';\n\nclass Post extends Component {\n  render() {\n    const { post } = this.props;\n\n    return (\n      <PostItem>\n        <Title color=\"#222\">\n          {post.name}\n        </Title>\n        <Title2 color=\"#222\">\n          {post.email}\n        </Title2>\n        <Title2 color=\"#222\">\n          {post.body}\n        </Title2>\n      </PostItem>\n    )\n  };\n};\n\nexport default Post;","import React, { Component } from 'react';\nimport Post from './components/post/Post'\nimport { Container, PostList } from '../theme';\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      posts: []\n    };\n  };\n\n  componentDidMount() {\n    // Fetch to api, using promises\n    fetch(\"https://jsonplaceholder.typicode.com/comments\")\n      .then(res => res.json())\n      .then(\n        (posts) => {\n          this.setState({\n            isLoaded: true,\n            posts\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  };\n\n  render() {\n    const { error, isLoaded, posts } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      const postItems = posts.map((post) =>\n        <Post key={post.id} post={post} />\n      );\n      return (\n        <Container>\n          <PostList>{postItems}</PostList>\n        </Container>\n      );\n    };\n  };\n};\n\nexport default Posts;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Nav from './modules/layout/nav/Nav'\nimport Login from './modules/user/Login'\nimport Register from './modules/user/Register'\nimport Posts from './modules/posts/Posts'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: rgb(98,104,189);\n  }\n`;\n\nconst Page = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 1.5rem;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <GlobalStyle />\n        <Page>\n          <Router>\n            <React.Fragment>\n              <Nav />\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route path=\"/register\" component={Register} />\n                <Route path=\"/posts\" component={Posts} />\n              </Switch>\n            </React.Fragment>\n          </Router>\n        </Page>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}